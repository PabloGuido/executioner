local datos = require("main.datos")

local spd_template = 210
local spd = spd_template
local axe_alive = true
local direction = "right"

local sonido = true

local function restore_sprite ()
	sprite.play_flipbook("/power_bar/go#sprite", "verdugo")
end

local function axe_action (self)
	local multiplicador = 4
	local power = self.axe_power
	local power_to_send
	local color 
	
	sprite.play_flipbook("/power_bar/go#sprite", "killing", restore_sprite )
	if power == 119 or power == 120 then
		color = "MAX POWER"
		power_to_send = 3
	elseif power == 118 or power == 121 then 
		color = "almost max power"
		self.axe_health = self.axe_health - 1*multiplicador
		power_to_send = 3
	elseif power >= 113 and power <=117 then
		color = "power is red"
		self.axe_health = self.axe_health - 2*multiplicador
		power_to_send = 3
	elseif power >= 122 and power <=126 then
		color = "power is red"
		self.axe_health = self.axe_health - 2*multiplicador
		power_to_send = 3
	elseif power >= 105 and power <=112 then
		color = "power is orange"
		self.axe_health = self.axe_health - 3*multiplicador
		power_to_send = 3
	elseif power >= 127 and power <= 134 then
		color = "power is orange"
		self.axe_health = self.axe_health - 3*multiplicador
		power_to_send = 3
	elseif power >= 97 and power <= 104 then
		color = "power is light orange"
		self.axe_health = self.axe_health - 4
		power_to_send = 2
	elseif power >= 135 and power <= 142 then
		color = "power is light orange"
		self.axe_health = self.axe_health - 4
		power_to_send = 2
	elseif power >= 89 and power <= 96 then
		color = "power is yellow"
		self.axe_health = self.axe_health - 5
		power_to_send = 2
	elseif power >= 143 and power <= 150 then
		color = "power is yellow"
		self.axe_health = self.axe_health - 5
		power_to_send = 2
	elseif power >= 60 and power <= 88 then
		color = "power is green"
		self.axe_health = self.axe_health - 6
		power_to_send = 1
	elseif power >= 151 and power <= 179 then
		color = "power is green"
		self.axe_health = self.axe_health - 6
		power_to_send = 1
	elseif power >= 0 and power <= 59 then
		color = "power is cyan"
		self.axe_health = self.axe_health - 7
		power_to_send = 1
	elseif power >= 180 and power <= 300 then
		color = "power is cyan"
		self.axe_health = self.axe_health - 7
		power_to_send = 1
	end


	if self.axe_health <= 0 and datos.cuenta < 12 then
		datos.game_over = true
		msg.post("/gui#gui", "axe_health", {self.axe_health})
		msg.post("/condenado#condenado", "cutting_head", {power_to_send})
		print("game over")
		msg.post("/gui#gui", "game_over")
	else

		print("Axe power: " .. power .. " // Color: " .. color .. " // Axe_health: " .. self.axe_health)
		msg.post("/condenado#condenado", "cutting_head", {power_to_send})
		msg.post("/gui#gui", "axe_health", {self.axe_health})
	end

end

local function move_bar (self)
	local function restore_position ()	
		local restore_p = vmath.vector3(20,136,0)
		go.set_position(restore_p)
	end
	
	if self.moving == true then
		go.cancel_animations(".", "position")
		local p = go.get_position()
		self.axe_power = tonumber(string.format("%d", p.x))
		self.moving = false
		axe_action (self)
	else	
		restore_position ()
		local newP = vmath.vector3(220,0,0)
		local p = go.get_position()
		
		self.moving = true
	end
end

function init(self)
	self.moving = false
	self.axe_health = 100
	msg.post(".", "acquire_input_focus")
	move_bar(self)
	self.axe_power = 0
end

function update(self, dt)
	local p = go.get_position()
	if self.moving == true and direction == "right" then
		
		if p.x >= 219 then
			direction = "left"
		else
			p.x = p.x + spd * dt		
			local newP = vmath.vector3(p.x, p.y, 0)
			go.set_position(newP)
		end
	elseif self.moving == true and direction == "left" then
		if p.x <= 20 then
			direction = "right"
		else
			p.x = p.x - spd * dt		
			local newP = vmath.vector3(p.x, p.y, 0)
			go.set_position(newP)
		end
		
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("restore_input") then
		local restore_p = vmath.vector3(20,136,0)
		go.set_position(restore_p)
		self.moving = true
		msg.post(".", "acquire_input_focus")
	elseif message_id == hash("restore_axe") then
		self.axe_health = 100
		msg.post("/gui#gui", "axe_health", {self.axe_health})
		msg.post("/gui#gui", "light_axe_health")
		spd = spd + 50
		if sonido == true then
		timer.delay(0.5, false, function() sound.play("/power_bar/go#sound1")end)
		end
	end
	if message_id == hash("restart_game") then
		datos.game_over = false
		self.axe_health = 100
		msg.post("/gui#gui", "axe_health", {self.axe_health})
		spd = spd_template
		if datos.cabeza_en_posicion == true then
			msg.post(".", "acquire_input_focus")
		end
		move_bar(self)
	end
end

function on_input(self, action_id, action)
	if action_id == hash("stop") and action.pressed or action_id == hash("touch") and action.pressed then
		if axe_alive == true then
			if action.x > 30 or action.y < 129 then
			msg.post(".", "release_input_focus")
			move_bar(self)
			end
		end
	end
	if action_id == hash("touch") and action.pressed then
		if action.x < 30 and action.y > 129 then
			msg.post("/gui#gui", "toggle_music")
			msg.post("/condenado#condenado", "toggle_sound")
			if sonido == true then
				sonido = false
			else 
				sonido = true
			end
		end
	end

end
